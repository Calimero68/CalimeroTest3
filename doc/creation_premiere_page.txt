https://symfony.com/doc/3.4/page_creation.html

Pour créer une page, il faut une route et un controleur

La route : elle est annotée dans le controleur avec la ligne 
	/**
     * @Route("/lucky/number")
     */
	 
Le controleur ==> Il finit toujours par Controller :
class LuckyController {}

La classe ==> Elle finit toujours par Action : 
public function numberAction()
    {
        $number = random_int(0, 100);

        return new Response(
            '<html><body>Lucky number: '.$number.'</body></html>'
        );
    }
	
Le code complet :

<?php
// src/AppBundle/Controller/LuckyController.php
namespace AppBundle\Controller;

use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class LuckyController
{
    /**
     * @Route("/lucky/number")
     */
    public function numberAction()
    {
        $number = random_int(0, 100);

        return new Response(
            '<html><body>Lucky number: '.$number.'</body></html>'
        );
    }
}
?>

Pour tester :
Se mettre dans C:\wamp64\www\CalimeroTest
php bin/console server:run

Puis http://localhost:8000/lucky/number


Pour aller plus loin, on va séparer le code du rendu (renderer)

On rajoute donc la ligne suivante pour utiliser un bundle
use Symfony\Bundle\FrameworkBundle\Controller\Controller;

on étend notre controller avec
class LuckyController extends Controller

On modifie le return avec
return $this->render('lucky/number.html.twig', array(
            'number' => $number,
			));
			
Et pour finir, on créé un nouveau fichier dans app/Resources/views/lucky que l'on va appeler number.html.twig
Et qui contiendra
{# app/Resources/views/lucky/number.html.twig #}
<h1>Your lucky number is {{ number }}</h1>